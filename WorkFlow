#Dorado basecalling and demux
dorado basecaller dna_r10.4.1_e8.2_apk_sup@v5.0.0 . --kit-name SQK-RBK114-24 > basecall.bam
dorado demux --emit-fastq --output-dir demux_output --no-classify basecall.bam

#Chloroplast assembly
efetch -db nucleotide -id PP894695.1 -format fasta > Plectranthus_barbatus_PP894695.1_cp.fasta

minimap2 -ax map-ont ~/Lamiaceae_Species_Files/Coleus_barbatus_genome/Plectranthus_barbatus_PP894695.1_cp.fasta all_used_barcodes.fastq > cp_mapping.sam

samtools view -Sb -F 4 cp_mapping.sam > cp_mapping.bam

samtools fastq cp_mapping.bam > amboinicus_cp_reads.fastq

flye --nano-raw amboinicus_cp_reads.fastq --out-dir flye_chloroplast --genome-size 150k --threads 8

#Mummer map to refernce
nucmer  -p coleus_amboinicus_flye_cp  ~/Lamiaceae_Species_Files/Coleus_barbatus_genome/Plectranthus_barbatus_PP894695.1_cp.fasta  ~/coleus_amboinicus/no_sample_id/nanopore_data/pod5_skip/demux_outputs_fastq/flye_chloroplast/assembly.fasta

delta-filter -1 coleus_amboinicus_flye_cp.delta > coleus_amboinicus_flye_cp.filtered.delta

mummerplot --filter -png  --layout -p coleus_amboinicus_flye_cp_plot coleus_amboinicus_flye_cp.filtered.delta

show-coords -rcl coleus_amboinicus_cp.filtered.delta > show_coords.txt

#Extracting sequences for assembly
samtools faidx assembly.fasta contig_6:20755-26916 > contig_6:20755-26916_reverse
samtools faidx assembly.fasta contig_6:1-20629 > contig_6:1-20629_reverse
samtools faidx assembly.fasta contig_2:1-5129 > contig_2:1-5129
samtools faidx assembly.fasta contig_2:5188-12220 > contig_2:5188-12220
samtools faidx assembly.fasta contig_4:1-42648 > contig_4:1-42648_reverse
samtools faidx assembly.fasta contig_3:1-17648 > contig_3:1-17648_reverse
samtools faidx assembly.fasta contig_6:26919-52609 > contig_6:26919-52609

#reverse complement files
seqtk seq -r contig_6:20755-26916_reverse > contig_6:20755-26916_reverse_complement.fa
seqtk seq -r contig_6:1-20629_reverse > contig_6:1-20629_reverse_complement.fa
seqtk seq -r contig_6:1-42648_reverse > contig_6:1-42648_reverse_complement.fa
seqtk seq -r contig_6:1-17648_reverse > contig_6:1-17648_reverse_complement.fa

OUT="cp_scaffolded.fasta"
segments=(
  "contig_6:20755-26916_reverse_complement.fa"
  "contig_6:1-20629_reverse_complement.fa"
  "contig_2:1-5129"
  "contig_2:5188-12220"
  "contig_4:1-42648_reverse_complement.fa"
  "contig_3:1-17648_reverse_complement.fa"
  "contig_6:26919-52609"
)

> "$OUT"

for f in "${segments[@]}"; do
  grep -v "^>" "$f" >> "$OUT"
done

grep -v "^>" "$OUT" | tr -d '\n' | sed '1i>scaffold' > cp_scaffolded_linear.fasta

#Extracting inverted repeat gene regions
samtools faidx cp_scaffolded_linear.fasta scaffold:101255-125535 > repeat_region_101255_125535

seqtk seq -r  repeat_region_101255_125535 > repeat_region_101255_125535_reverse_complement


"""Pyhton script to insert repeat
from Bio import SeqIO

# Files
original_file = "cp_scaffolded_linear.fasta"
insert_file = "repeat_region_100655_124935"
output_file = "cp_scaffolded_linear_with_repeat.fasta"

# Insert before ndhF
insert_pos = 81927

# Load sequences
original = SeqIO.read(original_file, "fasta")
insert = SeqIO.read(insert_file, "fasta")

# Insert sequence at position
new_seq = original.seq[:insert_pos] + insert.seq + original.seq[insert_pos:]
original.seq = new_seq

# Save
SeqIO.write(original, output_file, "fasta")
print(f"Inserted at position {insert_pos}, saved to {output_file}")
"""

#polish with Racon x3 and medaka x1
conda install -c bioconda racon

minimap2 -x map-ont -t 8 cp_scaffolded_linear_with_repeat.fasta ~/coleus_amboinicus/no_sample_id/nanopore_data/pod5_skip/demux_outputs_fastq/amboinicus_cp_reads.fastq > cp_with_repeat_polished_r1.paf
racon -t 8 ~/coleus_amboinicus/no_sample_id/nanopore_data/pod5_skip/demux_outputs_fastq/amboinicus_cp_reads.fastq cp_with_repeat_polished_r1.paf cp_scaffolded_linear_with_repeat.fasta > cp_with_repeat_polished_r1.fasta

minimap2 -x map-ont -t 8 cp_with_repeat_polished_r1.fasta ~/coleus_amboinicus/no_sample_id/nanopore_data/pod5_skip/demux_outputs_fastq/amboinicus_cp_reads.fastq > cp_with_repeat_polished_r2.paf
racon -t 8 ~/coleus_amboinicus/no_sample_id/nanopore_data/pod5_skip/demux_outputs_fastq/amboinicus_cp_reads.fastq cp_with_repeat_polished_r2.paf cp_with_repeat_polished_r1.fasta > cp_with_repeat_polished_r2.fasta

minimap2 -x map-ont -t 8 cp_with_repeat_polished_r2.fasta ~/coleus_amboinicus/no_sample_id/nanopore_data/pod5_skip/demux_outputs_fastq/amboinicus_cp_reads.fastq > cp_with_repeat_polished_r3.paf
racon -t 8 ~/coleus_amboinicus/no_sample_id/nanopore_data/pod5_skip/demux_outputs_fastq/amboinicus_cp_reads.fastq cp_with_repeat_polished_r3.paf cp_with_repeat_polished_r2.fasta > cp_with_repeat_polished_r3.fasta

medaka_consensus -i ~/coleus_amboinicus/no_sample_id/nanopore_data/pod5_skip/demux_outputs_fastq/all_used_barcodes.fastq -d cp_with_repeat_polished_r3.fasta -o medaka_output -t 8 -m r1041_e82_400bps_sup_v5.0.0

#mummer
nucmer  -p coleus_amboinicus_cp_medaka_polished  ~/Lamiaceae_Species_Files/Coleus_barbatus_genome/Plectranthus_barbatus_PP894695.1_cp.fasta  consensus.fasta

delta-filter -1 coleus_amboinicus_cp_medaka_polished.delta > coleus_amboinicus_cp_medaka_polished.filtered.delta

show-coords -rcl coleus_amboinicus_cp_medaka_polished.filtered.delta > show_coords_medaka_polished.txt

mummerplot --filter -png  --layout -p coleus_amboinicus_cp_plot_medaka_polished coleus_amboinicus_cp_medaka_polished.filtered.delta





